#!/bin/bash
REDBLD="\033[0m\033[91;1m"
Green="\e[92;1m"
RED="\033[1;31m"
YELLOW="\033[33m"
BLUE="\033[36m"
FONT="\033[0m"
GREENBG="\033[42;37m"
REDBG="\033[41;37m"
NC='\e[0m'
MYIP=$(curl -sS ipv4.icanhazip.com)
######################################
# // USERNAME IZIN IPP
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/alfinadia98/izin/main/ip | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/alfinadia98/izin/main/ip | grep $MYIP | awk '{print $3}')
echo "$valid" > /usr/bin/e
clear
######################################
# // DETAIL ORDER IZIN IP
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
######################################
clear
# // DAYS LEFT
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
if [[ $certifacate -le 0 ]]; then
masaaktif="EXPAIRED"
else
masaaktif="${certifacate} Day"
fi
clear
######################################
# // GETTINGS SYSTEM
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

clear
######################################
# // RUNNING SSH
######################################
if [[ $ssh_service == "running" ]]; then 
   status_ssh="\033[92;1mON${NC}"
else
   status_ssh="\033[91;1mOFF${NC}"
fi
######################################
# // RUNNING WEBSOCKET
######################################
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="\033[92;1mON${NC}"
else
    status_ws_epro="\033[91;1mOFF${NC}"
fi
######################################
# RUNNING HAPROXY
######################################
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="\033[92;1mON${NC}"
else
   status_haproxy="\033[91;1mOFF${NC}"
fi
######################################
# RUNNING XRAY
######################################
if [[ $xray_service == "running" ]]; then 
   status_xray="\033[92;1mON${NC}"
else
   status_xray="\033[91;1mOFF${NC}"
fi
######################################
# RUNNING NGINX
######################################
if [[ $nginx_service == "running" ]]; then 
   status_nginx="\033[92;1mON${NC}"
else
   status_nginx="\033[91;1mOFF${NC}"
fi
######################################
# RUNNING DROPBEAR
######################################
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="\033[92;1mGOOD${NC}"
else
   status_dropbear="\033[91;1mCRAZY${NC}"
fi
profile() {
    rm -rf /root/.profile
echo "if [ "/bin/bash" ]; then" >> /root/.profile
echo "if [ -f ~/.bashrc ]; then" >> /root/.profile
echo ". ~/.bashrc" >> /root/.profile
echo "fi" >> /root/.profile
echo "fi" >> /root/.profile
echo "mesg n || true" >> /root/.profile
echo "welcome" >> /root/.profile
}
# Fungsi untuk menambahkan pekerjaan cron ke /etc/cron.d/
tambah_pekerjaan_cron() {
    cron_file="/etc/cron.d/auto_update"
    pekerjaan_cron="15 1 * * * root /usr/local/sbin/auto_update"

    # Periksa apakah pekerjaan cron sudah ada di file
    if ! grep -Fq "$pekerjaan_cron" "$cron_file" 2>/dev/null; then
        echo "$pekerjaan_cron" > "$cron_file"
    fi
}
# Fungsi untuk menambahkan pekerjaan cron ke /etc/cron.d/
tambah_pekerjaan_cron1() {
    cron_file="/etc/cron.d/backup_otomatis"
    pekerjaan_cron="15 23 * * * root /usr/local/bin/backup_otomatis"

    # Periksa apakah pekerjaan cron sudah ada di file
    if ! grep -Fq "$pekerjaan_cron" "$cron_file" 2>/dev/null; then
        echo "$pekerjaan_cron" > "$cron_file"
    fi
}
tambah_pekerjaan_cron2() {
    cron_file="/etc/cron.d/reboot_otomatis"
    pekerjaan_cron="0 0 * * * root /usr/local/bin/reboot_otomatis"

    # Periksa apakah pekerjaan cron sudah ada di file
    if ! grep -Fq "$pekerjaan_cron" "$cron_file" 2>/dev/null; then
        echo "$pekerjaan_cron" > "$cron_file"
    fi
}
# \\ Vless account //
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
# \\ Vmess account //
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
# \\ Trojan account //
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
# \\ shadowsocks account //
ssx=$(grep -c -E "^#!# " "/etc/xray/config.json")
let ssa=$ssx/2

function ARI_Banner() {
echo -e "\033[96;1m┌─────────────────────────────────────────────────┐\e[0m"
echo -e "\033[96;1m│             \e[36m.::.\033[0m \033[0;35mA4N STORE\033[0m \e[36m.::.\033[0m           \033[96;1m │\e[0m"
#echo -e "\033[96;1m│ \e[41;1m                A4N STORE                 \e[0m \033[96;1m│\e[0m"
echo -e "\033[96;1m└─────────────────────────────────────────────────┘\e[0m"
}


function Service_System_Operating() {
echo -e "\033[96;1m┌─────────────────────────────────────────────────┐\033[0m "
echo -e "\033[96;1m│\e[97m \e[36mSYSTEM          : $(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')     \033[0m "
echo -e "\033[96;1m│\e[97m \e[36mRAM             : $(free -m | awk 'NR==2 {print $2}') MB \033[0m "
echo -e "\033[96;1m│\e[97m \e[36mUPTIME          : $(uptime -p | cut -d " " -f 2-10)\033[0m "
echo -e "\033[96;1m│\e[97m \e[36mIP VPS          : $(curl -s ipv4.icanhazip.com)     \033[0m "
echo -e "\033[96;1m│\e[97m \e[36mCITY            : $(cat /etc/xray/city)    \033[0m "
echo -e "\033[96;1m│\e[97m \e[36mISP             : $(cat /etc/xray/isp)    \033[0m "
echo -e "\033[96;1m│\e[97m \e[36mDOMAIN          : $(cat /etc/xray/domain)    \033[0m "
echo -e "\033[96;1m└─────────────────────────────────────────────────┘\033[0m"
}



function Service_Status() {
echo -e "\033[96;1m┌─────────────────────────────────────────────────┐\033[0m "
echo -e "\033[96;1m|\e[0m \e[36mPROXY :\e[0m $status_haproxy \e[96;1m|\e[0m \e[0m \e[36mNGINX :\e[0m $status_nginx \e[96;1m|\e[0m \e[0m \e[36mXRAY :\e[0m $status_xray \e[0m| $status_dropbear  \e[96;1m  | \e[0m "
echo -e "\033[96;1m└─────────────────────────────────────────────────┘\033[0m "
}



function Details_Clients_Name() {
echo -e "\033[96;1m   ┌───────────────────────────────────────────┐\033[0m "
echo -e "\033[96;1m   │\e[97m  \e[36mVERSION     : ${BLUE}4.0 LTS \033[0m "
echo -e "\033[96;1m   │\e[97m  \e[36mCLIENTS     :\033[0m\033[92;1m $(cat /usr/bin/user)   \033[0m "
echo -e "\033[96;1m   │\e[97m  \e[36mExpiry In   :\033[0m\033[92;1m $masaaktif  \033[0m "
echo -e "\033[96;1m   └───────────────────────────────────────────┘\033[0m "
}



function Acces_Use_Command() {
echo -e "\033[96;1m┌─────────────────────────────────────────────────┐\033[0m "
echo -e "\033[96;1m│  \e[34m\033[0;37m[01]\e[93m☞ \e[97m \e[36mSSH/OPENVPN       \e[34m\033[0;37m[07]\e[93m☞ \e[97m \e[36mBOT TELEGRAM   \e[96;1m│\e[0m"   
echo -e "\033[96;1m│  \e[34m\033[0;37m[02]\e[93m☞ \e[97m \e[36mXRAY MANAGER      \e[34m\033[0;37m[08]\e[93m☞ \e[97m \e[36mUPDATE SCRIPT  \e[96;1m│\e[0m"
echo -e "\033[96;1m│  \e[34m\033[0;37m[03]\e[93m☞ \e[97m \e[36mXRAY TROJAN       \e[34m\033[0;37m[09]\e[93m☞ \e[97m \e[36mBACKUP RESTORE \e[96;1m│\e[0m"
echo -e "\033[96;1m│  \e[34m\033[0;37m[04]\e[93m☞ \e[97m \e[36mSLOWDNS           \e[34m\033[0;37m[10]\e[93m☞ \e[97m \e[36mFEATURES       \e[96;1m│\e[0m"
echo -e "\033[96;1m│  \e[34m\033[0;37m[05]\e[93m☞ \e[97m \e[36mNOOBZVPNS         \e[34m\033[0;37m[11]\e[93m☞ \e[97m \e[36mFEATURES ADMIN \e[96;1m│\e[0m"
echo -e "\033[96;1m│  \e[34m\033[0;37m[06]\e[93m☞ \e[97m \e[36mSS-R               \e[34m\033[0;37m[x]\e[93m☞ \e[97m \e[36mEXIT           \e[96;1m│\e[0m"
echo -e "\033[96;1m└─────────────────────────────────────────────────┘\033[0m"
}



function Select_Display() {
echo
read -p "Select From option [1/11 or x] :  " hallo
case $hallo in
1) clear ; m-ssh ;; # menu ssh
2) clear ; m-xray ;; # menu vmess
3) clear ; m-tro ;; # menu vles
4) clear ; sd ;; # menu trojan
5) clear ; m-noobz ;; # menu noobz
6) clear ; m-ssr ;; # menu sadowsocks
7) clear ; m-bot ;; # menu bot telegram
8) clear ; rm -rf update.sh && echo -e '\033[1;32mwaiting...\e[0m' && gdown "18e181bPjPyMNvCb19fZW4s0yy3Ad_aN3" -O update.sh && chmod +x update.sh && ./update.sh ;; #Update script
9) clear ; m-bkp ;; # menu backup
10) clear ; m-ftr ;; # menu managers
x) exit ;;
11) clear ; # Tentukan lokasi file dan URL gdown
FILE1="/usr/bin/m-ftr-admin"
GDRIVE_ID1="1k4QUSkn83X4sOVoBxi2AcBtEgxjdTJ0a"
if [ -f "$FILE1" ]; then
    chmod +x "$FILE1"
   $FILE1
else
    gdown "$GDRIVE_ID1" -O "$FILE1" > /dev/null 2>&1
    chmod +x "$FILE1"
     $FILE1
fi ;; # menu admin
esac
}

ARI_Banner
Service_System_Operating
Service_Status
Details_Clients_Name
Acces_Use_Command
tambah_pekerjaan_cron
tambah_pekerjaan_cron1
tambah_pekerjaan_cron2
profile
Select_Display










