#!/bin/bash
yellow="\033[0;33m"
ungu="\033[0;35m"
Red="\033[91;1m"
Xark="\033[0m"
BlueCyan="\033[5;36m"
WhiteBe="\033[5;37m"
GreenBe="\033[5;32m"
YellowBe="\033[5;33m"
BlueBe="\033[5;34m"
# . Liner 
function baris_panjang() {
   echo -e "\033[5;36m ———————————————————————————————————————————————\033[0m"
}

function ARI_Banner() {
baris_panjang
NAMASC="A4N STORE"
function center_text() {
    local text="$1"
    local width=50  # Sesuaikan dengan panjang baris yang diinginkan

    # Hapus kode warna untuk menghitung panjang sebenarnya dari teks
    local plain_text=$(echo -e "$text" | sed 's/\x1b\[[0-9;]*m//g')
    local len=${#plain_text}
    local spaces=$(( (width - len) / 2 ))

    # Tampilkan teks dengan warna dan centering yang benar
    printf "%${spaces}s%s\033[0m\n" "" "$(echo -e "$text")"
}
# Kombinasi warna untuk ".::." dan "A4N STORE"
formatted_text="\e[36m.::.\033[0;35m $NAMASC \e[36m.::."
# Tampilkan teks yang diformat
center_text "$formatted_text"
baris_panjang
}

function Sc_Credit(){
sleep 1
baris_panjang
function center_text() {
    local text="$1"
    local width=50  # Sesuaikan dengan panjang baris yang diinginkan

    # Hapus kode warna untuk menghitung panjang sebenarnya dari teks
    local plain_text=$(echo -e "$text" | sed 's/\x1b\[[0-9;]*m//g')
    local len=${#plain_text}
    local spaces=$(( (width - len) / 2 ))

    # Tampilkan teks dengan warna dan centering yang benar
    printf "%${spaces}s%s\033[0m\n" "" "$(echo -e "$text")"
}
# Kombinasi warna untuk ".::." dan "A4N STORE"
formatted_text="\033[0;35m Terimakasih sudah menggunakan- \033[0m"
formatted_text1="\033[0;35m Script Credit By $NAMASC \033[0m"
# Tampilkan teks yang diformat
center_text "$formatted_text"
center_text "$formatted_text1"
baris_panjang
exit 1
}

duration=3
frames=("██10%" "█████35%" "█████████65%" "█████████████80%" "█████████████████████90%" "█████████████████████████100%")

# Menghitung jumlah frame
num_frames=${#frames[@]}

# Menghitung jumlah iterasi
num_iterations=$((duration))

# Fungsi untuk menampilkan animasi loading berwarna

Loading_Animasi() {
    for ((i = 0; i < num_iterations; i++)); do
        clear
        index=$((i % num_frames))
        color_code=$((31 + i % 7))
echo ""
echo ""
echo ""
echo -e "\e[1;${color_code}m ${frames[$index]}\e[0m"
    done
}

# Menjalankan animasi loading
loading() {
  local pid=$1
  local delay=0.1
  local spin='-\|/'

  while ps -p $pid > /dev/null; do
    local temp=${spin#?}
    printf "[%c] " "$spin"
    local spin=$temp${spin%"$temp"}
    sleep $delay
    printf "\b\b\b\b\b\b"
  done

  printf "    \b\b\b\b"
}

# Menampilkan pesan setelah animasi selesai
function Loading_Succes() {
clear
echo -e  "\033[5;32mSucces\033[0m"
sleep 1
clear
}


function con() {
    local -i bytes=$1;
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes}B"
    elif [[ $bytes -lt 1048576 ]]; then
        echo "$(( (bytes + 1023)/1024 ))KB"
    elif [[ $bytes -lt 1073741824 ]]; then
        echo "$(( (bytes + 1048575)/1048576 ))MB"
    else
        echo "$(( (bytes + 1073741823)/1073741824 ))GB"
    fi
}
#!/bin/bash

# Memeriksa dan membuat direktori jika tidak ada
if [ ! -d "/etc/kyt/limit/vmess/ip" ]; then
    mkdir -p /etc/kyt/limit/vmess/ip > /dev/null 2>&1
fi

if [ ! -d "/etc/kyt/limit/vless/ip" ]; then
    mkdir -p /etc/kyt/limit/vless/ip > /dev/null 2>&1
fi

if [ ! -d "/etc/limit/vless" ]; then
    mkdir -p /etc/limit/vless > /dev/null 2>&1
fi

if [ ! -d "/etc/limit/vmess" ]; then
    mkdir -p /etc/limit/vmess > /dev/null 2>&1
fi

data4=( `cat /etc/xray/config.json | grep '###' | cut -d ' ' -f 2 | sort | uniq`) > /dev/null 2>&1
for akun in "${data4[@]}"
do
iplimit1=$(cat /etc/kyt/limit/vmess/ip/$akun) > /dev/null 2>&1
if [[ $iplimit1 = "" ]]; then
echo "2" > /etc/kyt/limit/vmess/ip/$akun
else
echo -ne
fi
koa=$(cat /etc/vmess/${akun}) > /dev/null 2>&1
if [[ $koa = "" ]]; then
echo "107374182400" > /etc/vmess/$akun
else
echo -ne
fi
koa1=$(cat /etc/limit/vmess/${akun}) > /dev/null 2>&1
if [[ $koa1 = "" ]]; then
echo "0" > /etc/limit/vmess/$akun
else
echo -ne
fi
done
data5=( `cat /etc/xray/config.json | grep '#&' | cut -d ' ' -f 2 | sort | uniq`) > /dev/null 2>&1
for akun in "${data5[@]}"
do
ipa=$(cat /etc/kyt/limit/vless/ip/$akun) > /dev/null 2>&1
if [[ $ipa = "" ]]; then
echo "2" > /etc/kyt/limit/vless/ip/$akun
else
echo -ne
fi
koa=$(cat /etc/vless/${akun}) > /dev/null 2>&1
if [[ $koa = "" ]]; then
echo "107374182400" > /etc/vless/$akun
else
echo -ne
fi
koa1=$(cat /etc/limit/vless/${akun}) > /dev/null 2>&1
if [[ $koa1 = "" ]]; then
echo "0" > /etc/limit/vless/$akun
else
echo -ne
fi
done
clear
echo -n > /tmp/other.txt
data=( `cat /etc/xray/config.json | grep '###' | cut -d ' ' -f 2 | sort | uniq`);
ARI_Banner
baris_panjang
function center_text() {
    local color="$1"
    local text="$2"
    local width=50  # Sesuaikan dengan panjang baris yang diinginkan
    local len=${#text}
    local spaces=$(( (width - len) / 2 ))

    printf "${color}%${spaces}s%s\033[0m\n" "" "$text"
}

center_text "\033[0;35m" "CHECK VMESS"
baris_panjang
echo -e "${Lred}    LOG     IP           QUOTA    USER${Xark} "
baris_panjang
echo ""
for akun in "${data[@]}"
do
if [[ -z "$akun" ]]; then
akun="tidakada"
fi
echo -n > /tmp/ipvmess.txt
data2=( `cat /var/log/xray/access.log | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq`);
for ip in "${data2[@]}"
do
jum=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | grep -w "$ip" | sort | uniq)
if [[ "$jum" = "$ip" ]]; then
echo "$jum" >> /tmp/ipvmess.txt
else
echo "$ip" >> /tmp/other.txt
fi
jum2=$(cat /tmp/ipvmess.txt)
sed -i "/$jum2/d" /tmp/other.txt > /dev/null 2>&1
done
jum=$(cat /tmp/ipvmess.txt) > /dev/null 2>&1
if [[ -z "$jum" ]]; then
echo > /dev/null
else
iplimit=$(cat /etc/kyt/limit/vmess/ip/${akun}) > /dev/null 2>&1
jum2=$(cat /tmp/ipvmess.txt | wc -l) > /dev/null 2>&1
byte=$(cat /etc/limit/vmess/${akun}) > /dev/null 2>&1
lim=$(con ${byte}) > /dev/null 2>&1
wey=$(cat /etc/vmess/${akun}) > /dev/null 2>&1
gb=$(con ${wey}) > /dev/null 2>&1
lastlogin=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 2 | tail -1) > /dev/null 2>&1
#echo -e  "   $lastlogin      $jum2/$iplimit   ${lim}/${gb} ${akun}" | lolcat
# Define your column widths
width_lastlogin=10
width_ip_quota=10
width_lim_gb=10
width_akun=10
printf " %-${width_lastlogin}s %-${width_ip_quota}s %-${width_lim_gb}s %-${width_akun}s\n" "$lastlogin" "$jum2/$iplimit" "$lim/$gb" "$akun" | lolcat
fi 
rm -rf /tmp/ipvmess.txt
done
rm -rf /tmp/other.txt
echo ""
baris_panjang
echo ""
echo ""
echo -n > /tmp/other.txt
data=( `cat /etc/xray/config.json | grep '#&' | cut -d ' ' -f 2 | sort | uniq`) > /dev/null 2>&1 ;baris_panjang

center_text "\033[0;35m" "CHECK VLESS"
#echo -e "${ungu}           CHECK VLESS  ${Xark} "
baris_panjang
echo -e "${Lred}    LOG     IP           QUOTA    USER${Xark} "
baris_panjang
for akun in "${data[@]}"
do
if [[ -z "$akun" ]]; then
akun="tidakada"
fi
echo -n > /tmp/ipvless.txt
data2=( `cat /var/log/xray/access.log | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq`); > /dev/null 2>&1
for ip in "${data2[@]}"
do
jum=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | grep -w "$ip" | sort | uniq) > /dev/null 2>&1
if [[ "$jum" = "$ip" ]]; then
echo "$jum" >> /tmp/ipvless.txt
else
echo "$ip" >> /tmp/other.txt
fi
jum2=$(cat /tmp/ipvless.txt) > /dev/null 2>&1
sed -i "/$jum2/d" /tmp/other.txt > /dev/null 2>&1
done
jum=$(cat /tmp/ipvless.txt) > /dev/null 2>&1
if [[ -z "$jum" ]]; then
echo > /dev/null
else
iplimit=$(cat /etc/kyt/limit/vless/ip/${akun}) > /dev/null 2>&1
jum2=$(cat /tmp/ipvless.txt | wc -l) > /dev/null 2>&1
byte=$(cat /etc/limit/vless/${akun}) > /dev/null 2>&1
lim=$(con ${byte}) > /dev/null 2>&1
wey=$(cat /etc/vless/${akun}) > /dev/null 2>&1
gb=$(con ${wey}) > /dev/null 2>&1
lastlogin=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 2 | tail -1) > /dev/null 2>&1
#echo -e  "   $lastlogin      $jum2/$iplimit   ${lim}/${gb} ${akun}" | lolcat
# Define your column widths
width_lastlogin=10
width_ip_quota=10
width_lim_gb=10
width_akun=10
printf " %-${width_lastlogin}s %-${width_ip_quota}s %-${width_lim_gb}s %-${width_akun}s\n" "$lastlogin" "$jum2/$iplimit" "$lim/$gb" "$akun" | lolcat

fi 
rm -rf /tmp/ipvless.txt
done
rm -rf /tmp/other.txt
echo ""
baris_panjang
echo ""
Sc_Credit
