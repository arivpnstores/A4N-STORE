#!/bin/bash
clear

yellow="\033[0;33m"
ungu="\033[0;35m"
Red="\033[91;1m"
Xark="\033[0m"
BlueCyan="\033[5;36m"
WhiteBe="\033[5;37m"
GreenBe="\033[5;32m"
YellowBe="\033[5;33m"
BlueBe="\033[5;34m"

# . Liner 
function baris_panjang() {
   echo -e "\033[5;36m ———————————————————————————————————————————————\033[0m"
}

function ARI_Banner() {
    clear
    baris_panjang
    NAMASC="A4N STORE"
function center_text() {
    local text="$1"
    local width=50  # Sesuaikan dengan panjang baris yang diinginkan

    # Hapus kode warna untuk menghitung panjang sebenarnya dari teks
    local plain_text=$(echo -e "$text" | sed 's/\x1b\[[0-9;]*m//g')
    local len=${#plain_text}
    local spaces=$(( (width - len) / 2 ))

    # Tampilkan teks dengan warna dan centering yang benar
    printf "%${spaces}s%s\033[0m\n" "" "$(echo -e "$text")"
}
# Kombinasi warna untuk ".::." dan "A4N STORE"
formatted_text="\e[36m.::.\033[0;35m $NAMASC \e[36m.::."
# Tampilkan teks yang diformat
center_text "$formatted_text"
    baris_panjang
}

function VMESS_Banner() {
    echo "     "
    echo -e "\033[0;35m                    XRAY VMESS                  \033[0m"
    baris_panjang
}

function Sc_Credit(){
    sleep 1
    baris_panjang
function center_text() {
    local text="$1"
    local width=50  # Sesuaikan dengan panjang baris yang diinginkan

    # Hapus kode warna untuk menghitung panjang sebenarnya dari teks
    local plain_text=$(echo -e "$text" | sed 's/\x1b\[[0-9;]*m//g')
    local len=${#plain_text}
    local spaces=$(( (width - len) / 2 ))

    # Tampilkan teks dengan warna dan centering yang benar
    printf "%${spaces}s%s\033[0m\n" "" "$(echo -e "$text")"
}
# Kombinasi warna untuk ".::." dan "A4N STORE"
formatted_text="\033[0;35m Terimakasih sudah menggunakan- \033[0m"
formatted_text1="\033[0;35m Script Credit By $NAMASC \033[0m"
# Tampilkan teks yang diformat
center_text "$formatted_text"
center_text "$formatted_text1"
    baris_panjang
    echo ""
    read -rp "Press any key to go back"
    m-xray
}

duration=3
frames=("██10%" "█████35%" "█████████65%" "█████████████80%" "█████████████████████90%" "█████████████████████████100%")

# Menghitung jumlah frame
num_frames=${#frames[@]}

# Menghitung jumlah iterasi
num_iterations=$((duration))

# Fungsi untuk menampilkan animasi loading berwarna
Loading_Animasi() {
    for ((i = 0; i < num_iterations; i++)); do
        clear
        index=$((i % num_frames))
        color_code=$((31 + i % 7))
        echo ""
        echo ""
        echo ""
        echo -e "\e[1;${color_code}m ${frames[$index]}\e[0m"
        sleep 0.5
    done
}
# // jalankan perintah sleep 3 & loading $!


# Menjalankan animasi loading
loading() {
  local pid=$1
  local delay=0.1
  local spin='-\|/'

  while ps -p $pid > /dev/null; do
    local temp=${spin#?}
    printf "[%c] " "$spin"
    local spin=$temp${spin%"$temp"}
    sleep $delay
    printf "\b\b\b\b\b\b"
  done

  printf "    \b\b\b\b"
}
loading() {
  local pid=$1
  local delay=0.1
  local spin='-\|/'

  while ps -p $pid > /dev/null; do
    local temp=${spin#?}
    printf "[%c] " "$spin"
    local spin=$temp${spin%"$temp"}
    sleep $delay
    printf "\b\b\b\b\b\b"
  done

  printf "    \b\b\b\b"
}

# Menampilkan pesan setelah animasi selesai
function Loading_Succes() {
    clear
    echo -e "\033[5;32mSuccess\033[0m"
    sleep 2
    clear
}

# function Daftar_Member_Vmess() {
#    baris_panjang
 #   echo ""
 #   grep -E "^### " "/etc/xray/config.json" | cut -d ' ' -f 2 | sort | uniq | nl -w2 -s'. ' | lolcat
 #   echo ""
 #   baris_panjang
 #   echo ""
# }

function Cek_Config_Vmess() {
    echo " Select the existing client you want to check"
    echo " Press CTRL+C to return"
    baris_panjang
    options=($(grep -E "^### " "/etc/xray/config.json" | cut -d ' ' -f 2 | sort | uniq))
    max_options=${#options[@]}
    
    for i in "${!options[@]}"; do
        printf "   %2d) %s\n" $((i+1)) "${options[$i]}"
    done
    
    echo ""
    read -rp "Select one client [1-$max_options] or [user] : " input
    
    if [[ $input =~ ^[0-9]+$ ]]; then
        index=$((input-1))
        if [[ $index -ge 0 && $index -lt ${#options[@]} ]]; then
            user=${options[$index]}
        else
            echo "Nomor tidak valid!"
            return
        fi
    else
        user=$input
    fi

    if [[ -z $user ]]; then
        echo -e "User Tidak Ditemukan!!!"
        read -n 1 -s -r -p "Enter Back To Menu"
        m-xray
        return
    fi


    CITY=$(cat /etc/xray/city)
    ISP=$(cat /etc/xray/isp)
    domain=$(cat /etc/xray/domain)
    iplimit=$(cat /etc/kyt/limit/vmess/ip/$user)
    Quota1=$(cat /etc/vmess/$user)
    Quota=$((Quota1 / 1024 / 1024 / 1024))
    uuid=$(grep -oP '(?<="id": ")[^"]*' "/etc/xray/config.json" | grep -i "$user" | uniq)
    exp=$(grep -E "^### $user " "/etc/xray/config.json" | cut -d ' ' -f 3 | uniq)
    asu=$(cat <<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${domain}",
      "port": "443",
      "id": "${uuid}",
      "aid": "0",
      "net": "ws",
      "path": "/vmess",
      "type": "none",
      "host": "${domain}",
      "tls": "tls"
}
EOF
)
    ask=$(cat <<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${domain}",
      "port": "80",
      "id": "${uuid}",
      "aid": "0",
      "net": "ws",
      "path": "/vmess",
      "type": "none",
      "host": "${domain}",
      "tls": "none"
}
EOF
)
    grpc=$(cat <<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${domain}",
      "port": "443",
      "id": "${uuid}",
      "aid": "0",
      "net": "grpc",
      "path": "vmess-grpc",
      "type": "none",
      "host": "${domain}",
      "tls": "tls"
}
EOF
)
    vmesslink1="vmess://$(echo $asu | base64 -w 0)"
    vmesslink2="vmess://$(echo $ask | base64 -w 0)"
    vmesslink3="vmess://$(echo $grpc | base64 -w 0)"
}

function Details_Account() {
    baris_panjang
    echo -e "\033[0;35m                    XRAY VMESS                  \033[0m"
    baris_panjang
    echo -e " Remarks       : ${user}"
    echo -e " Domain        : ${domain}"
    echo -e " User Quota    : ${Quota} GB"
    echo -e " User Ip       : ${iplimit} IP"
    echo -e " Port TLS      : 400,8443"
    echo -e " Port WS       : 80,8880,8080,2082"
    echo -e " Key           : ${uuid}"
    echo -e " Locations     : $CITY"
    echo -e " ISP           : $ISP"
    echo -e " AlterId       : 0"
    echo -e " Security      : auto"
    echo -e " Network       : ws"
    echo -e " Path          : /vmess"
    echo -e " Dynamic Path  : yourbug/vmess"
    echo -e " ServiceName   : vmess-grpc"
    echo -e "\033[0m"
}

function Link_Json() {
    baris_panjang
    echo -e " Link TLS      : ${vmesslink1}"
    baris_panjang
    echo -e " Link WS       : ${vmesslink2}"
    baris_panjang
    echo -e " Link GRPC     : ${vmesslink3}"
    baris_panjang
    echo -e " OpenClash     : https://${domain}:81/vmess-$user.txt"
    baris_panjang
}

function Details_Expiry() {
    echo -e "\033[33m Expiry        : $exp \033[0m"
    baris_panjang
}

ARI_Banner
VMESS_Banner
echo "     "
#Daftar_Member_Vmess
#echo "     "
Cek_Config_Vmess
clear
sleep 3 & loading $!
Loading_Succes
Details_Account
Link_Json
Details_Expiry
Sc_Credit
