#!/bin/bash

BlueCyan='\e[5;36m'
Xark='\e[0m'
ungu='\033[0;35m'
yellow='\e[33m'
WhiteBe='\e[5;37m'
GreenBe='\e[5;32m'
BlueCyan='\e[5;36m'
Xark='\e[0m'
g="\e[36m"
r='\e[31m'  # Merah
gb='\033[0;37m'
NC='\e[0m'
clear

# . Liner 
function line_atas(){
    echo -e " \033[0;36m┌─────────────────────────────────────┐\033[0m"
}

function line_bawah() {
    echo -e " \033[0;36m└─────────────────────────────────────┘\033[0m"
}

function baris_panjang() {
    echo -e "\033[5;36m ———————————————————————————————————————————————\033[0m"
}

function ARI_Banner() {
    line_atas
    echo -e "\e[36m        .::. \033[0;35mA4N STORE \e[36m.::.        \033[0m"
    line_bawah
}

function Sc_Credit(){
    sleep 1
    baris_panjang
    function center_text() {
        local text="$1"
        local width=50  # Sesuaikan dengan panjang baris yang diinginkan

        # Hapus kode warna untuk menghitung panjang sebenarnya dari teks
        local plain_text=$(echo -e "$text" | sed 's/\x1b\[[0-9;]*m//g')
        local len=${#plain_text}
        local spaces=$(( (width - len) / 2 ))

        # Tampilkan teks dengan warna dan centering yang benar
        printf "%${spaces}s%s\033[0m\n" "" "$(echo -e "$text")"
    }
    
    # Teks ucapan terima kasih
    formatted_text="\033[0;35m Terimakasih sudah menggunakan- \033[0m"
    formatted_text1="\033[0;35m Script Credit By $NAMASC \033[0m"
    
    # Tampilkan teks yang diformat
    center_text "$formatted_text"
    center_text "$formatted_text1"
    baris_panjang
    exit 1
}

clear

# // STATUS SERVICE BOT
if systemctl list-units --full -all | grep -Fq "kyt.service"; then
    bot_service=$(systemctl status kyt | grep active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
    if [[ $bot_service == "running" ]]; then 
        sts_bot="${g}[ON]${NC}"
    else
        sts_bot="${r}[OFF]${NC}"
    fi
else
    sts_bot="${r}[NOT FOUND]${NC}"
fi

function Banner() {
    line_atas
    echo -e "\033[0;35m             Menu Bot Panel            \e[36m"
    line_bawah
}

function Menu_Features() {
    ARI_Banner
    Banner
    line_atas
    echo -e "        ${g}Status Bot ($NC ${sts_bot} ${g})         "
    line_bawah
    line_atas
    echo -e " ${g}│  ${gb}[01] • $NC ${g}Create Bot"
    echo -e " ${g}│  ${gb}[02] • $NC ${g}Edit API & ID Bot"
    echo -e " ${g}│  ${gb}[03] • $NC ${g}Delete Bot"
    echo -e " ${g}│  ${gb}[04] • $NC ${g}Stop Bot"
    echo -e " ${g}│  ${gb}[05] • $NC ${g}Restart Bot"
    echo -e " ${g}│  ${gb}[06] • $NC ${g}Auto Backup Bot"
    line_bawah
    line_atas
    echo -e " ${g}│   ${gb}[b] • $NC ${g}Back to Menu"
    echo -e " ${g}│   ${gb}[x] • $NC ${g}EXIT"
    line_bawah
}

Menu_Features
read -p "Select [1/6 or x] :  " Ltt
case $Ltt in
0) clear ; echo "Bot Status: ${sts_bot}" ;;
1) clear ; # Tentukan lokasi file dan URL gdown
   FILE1="/usr/bin/kyt.sh"
   GDRIVE_ID1="1UumTboqLcmeXU57bvf6XiAuSGSnfC-_F"
   if [ -f "$FILE1" ]; then
       chmod +x "$FILE1"
       $FILE1
   else
       gdown "$GDRIVE_ID1" -O "$FILE1" > /dev/null 2>&1
       chmod +x "$FILE1"
       $FILE1
   fi ;;
2) clear ; add-bot-notif ;;
3) clear ; hapus-bot ;;
4) clear ; stop-bot ;;
5) clear ; restart-bot ;;
6) clear ; autobackup ;;
*) clear ; exit ;;
esac
